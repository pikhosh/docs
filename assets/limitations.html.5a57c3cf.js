import{_ as e,d as i}from"./app.c5ce3f59.js";const t={},a=i('<h1 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations" aria-hidden="true">#</a> Limitations</h1><p>As you know, Isar works on mobile devices and desktops running on the VM as well as Web. Both platforms are very different and have different limitations.</p><h2 id="vm-limitations" tabindex="-1"><a class="header-anchor" href="#vm-limitations" aria-hidden="true">#</a> VM Limitations</h2><ul><li>Only the first 1024 bytes of a string can be used for an prefix where clause</li></ul><h2 id="web-limitations" tabindex="-1"><a class="header-anchor" href="#web-limitations" aria-hidden="true">#</a> Web Limitations</h2><p>Because Isar Web relies on IndexedDB, there are more limitations but they are barely noticeable while using Isar.</p><ul><li>Currently, <code>Isar.splitWords()</code> and <code>.matches()</code> filters are not yet implemented</li><li>Schema changes are not as tighly checked as in the VM so be careful to comply with the rules</li><li>All number types are stored as double (the only js number type) so <code>@Size32</code> has no effect</li><li>Indexes are represented differenlty so hash indexes don&#39;t use less space (they still work the same)</li><li><code>col.delete()</code> and <code>col.deleteAll()</code> work correctly but the return value is not correct</li><li><code>NaN</code> is not supported as a value</li></ul>',7);function s(r,o){return a}var n=e(t,[["render",s],["__file","limitations.html.vue"]]);export{n as default};
